/*
 *   ChoiceOfTwoVerticesUI.java
 *
 *   Copyright (C) 2006, 2007 Alexander Technological Educational Institute of Thessaloniki
 *
 *   This program is free software; you can redistribute it and/or modify
 *   it under the terms of the GNU General Public License as published by
 *   the Free Software Foundation; either version 2 of the License, or
 *   (at your option) any later version.
 
 *   This program is distributed in the hope that it will be useful,
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *   GNU General Public License for more details.
 
 *   You should have received a copy of the GNU General Public License along
 *   with this program; if not, write to the Free Software Foundation, Inc.,
 *   51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 *
 */

package org.graphnetwork.ui;

/* swing and awt classes */
import javax.swing.JPanel;
import javax.swing.JLabel;
import java.awt.GridLayout;
import java.awt.FlowLayout;

/**
 *
 * @author faif
 */
public class ShortestPathAlgResultsUI extends javax.swing.JDialog
        implements org.graphnetwork.common.Constants {

    /**
     * @param tit the title of the window
     * @param src the source vertex
     * @param dst the destination vertex
     * @param len the length of the path
     * @param cost the total cost of the path
     * @param path the path
     */
    public ShortestPathAlgResultsUI(java.awt.Frame parent, boolean modal,
            String tit, Object src, Object dst, int len, float cost, Object path[]) {
        super(parent, modal);
        initComponents();
        
        setTitle(tit);
        
        // set the values of the components
        fromCL.setText(src.toString());
        toCL.setText(dst.toString());
        bestPLResL.setText(len + EMPTY);
        bestPCResL.setText(cost + EMPTY);
        displayPath(path);
    }
    
    /**
     * Displays the weights of the visited edges
     *
     * @param ob the path 
     *
     */
    private void displayPath(Object ob[]) {
        innerPathPane.setLayout(new GridLayout(ob.length, 0, 10, 5));
        for (int i=0; i<ob.length; i++) {
            JPanel tmp = new JPanel();
            tmp.setLayout(new FlowLayout(FlowLayout.LEFT, 0, 0));
            tmp.add(new JLabel(ob[i].toString()));
            innerPathPane.add(tmp);
        }
        innerPathPane.revalidate();
    }
    
    
    public void setVisible(boolean set) {
        /* center the dialog */
        pack();
        setLocationRelativeTo(this.getParent());
        
        /* call the parent setVisible */
        super.setVisible(set);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        verticesPane = new javax.swing.JPanel();
        fromL = new javax.swing.JLabel();
        toL = new javax.swing.JLabel();
        fromCL = new javax.swing.JLabel();
        toCL = new javax.swing.JLabel();
        resultsPane = new javax.swing.JPanel();
        bestPLLL = new javax.swing.JLabel();
        bestPCL = new javax.swing.JLabel();
        bestPCResL = new javax.swing.JLabel();
        bestPLResL = new javax.swing.JLabel();
        closeB = new javax.swing.JButton();
        borderPane = new javax.swing.JPanel();
        pathScroll = new javax.swing.JScrollPane();
        innerPathPane = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Src - Dst");
        setResizable(false);
        getAccessibleContext().setAccessibleName("");
        verticesPane.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Vertices")));
        fromL.setText("From");

        toL.setText("To");

        fromCL.setPreferredSize(new java.awt.Dimension(16, 14));

        toCL.setPreferredSize(new java.awt.Dimension(16, 14));

        org.jdesktop.layout.GroupLayout verticesPaneLayout = new org.jdesktop.layout.GroupLayout(verticesPane);
        verticesPane.setLayout(verticesPaneLayout);
        verticesPaneLayout.setHorizontalGroup(
            verticesPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(verticesPaneLayout.createSequentialGroup()
                .addContainerGap()
                .add(verticesPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(toL)
                    .add(fromL))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 12, Short.MAX_VALUE)
                .add(verticesPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, toCL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(fromCL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        verticesPaneLayout.setVerticalGroup(
            verticesPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(verticesPaneLayout.createSequentialGroup()
                .add(verticesPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(fromL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(fromCL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(4, 4, 4)
                .add(verticesPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(toL)
                    .add(toCL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(4, Short.MAX_VALUE))
        );

        resultsPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));
        bestPLLL.setText("Best Path Length");

        bestPCL.setText("Best Path Cost");

        bestPCResL.setPreferredSize(new java.awt.Dimension(6, 14));

        bestPLResL.setPreferredSize(new java.awt.Dimension(6, 14));

        org.jdesktop.layout.GroupLayout resultsPaneLayout = new org.jdesktop.layout.GroupLayout(resultsPane);
        resultsPane.setLayout(resultsPaneLayout);
        resultsPaneLayout.setHorizontalGroup(
            resultsPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(resultsPaneLayout.createSequentialGroup()
                .addContainerGap()
                .add(resultsPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(bestPCL)
                    .add(bestPLLL))
                .add(42, 42, 42)
                .add(resultsPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, bestPLResL, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, bestPCResL, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE))
                .addContainerGap())
        );
        resultsPaneLayout.setVerticalGroup(
            resultsPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, resultsPaneLayout.createSequentialGroup()
                .add(resultsPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bestPCL)
                    .add(bestPCResL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(resultsPaneLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(bestPLLL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 17, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(bestPLResL, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(26, 26, 26))
        );

        closeB.setMnemonic('O');
        closeB.setText("Close");
        closeB.setToolTipText("Exit");
        closeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBActionPerformed(evt);
            }
        });

        borderPane.setLayout(new java.awt.BorderLayout(5, 5));

        borderPane.setBorder(javax.swing.BorderFactory.createTitledBorder("Path (visited vertices)"));
        borderPane.setMinimumSize(new java.awt.Dimension(121, 346));
        borderPane.setPreferredSize(new java.awt.Dimension(180, 146));
        pathScroll.setBorder(null);
        pathScroll.setAutoscrolls(true);
        pathScroll.setMinimumSize(new java.awt.Dimension(10, 5));
        pathScroll.setPreferredSize(new java.awt.Dimension(10, 35));
        innerPathPane.setLayout(new java.awt.GridLayout());

        pathScroll.setViewportView(innerPathPane);

        borderPane.add(pathScroll, java.awt.BorderLayout.CENTER);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(verticesPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(resultsPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .addContainerGap()
                        .add(borderPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(153, 153, 153)
                        .add(closeB, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 71, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(verticesPane, 0, 72, Short.MAX_VALUE)
                    .add(resultsPane, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(borderPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                .add(closeB)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void closeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBActionPerformed
        dispose();
    }//GEN-LAST:event_closeBActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel bestPCL;
    private javax.swing.JLabel bestPCResL;
    private javax.swing.JLabel bestPLLL;
    private javax.swing.JLabel bestPLResL;
    private javax.swing.JPanel borderPane;
    private javax.swing.JButton closeB;
    private javax.swing.JLabel fromCL;
    private javax.swing.JLabel fromL;
    private javax.swing.JPanel innerPathPane;
    private javax.swing.JScrollPane pathScroll;
    private javax.swing.JPanel resultsPane;
    private javax.swing.JLabel toCL;
    private javax.swing.JLabel toL;
    private javax.swing.JPanel verticesPane;
    // End of variables declaration//GEN-END:variables
}
